#!/bin/bash
#
#  author: PRATAP KUMAR (https://github.com/PRATAP-KUMAR)
# version: 210910
# changes: v.210910 (agail) rewrote to use functions, added option to install dependency
#                   changed invocation, now uses --set or --reset
#                   added some colorized output
#

dist=$(awk -F "[=]" '/^UBUNTU/ {print $2}' /etc/os-release)
manpkg=libglib2.0-dev
src=/usr/share/gnome-shell/theme/Yaru/gnome-shell-theme.gresource
dst=/usr/local/share/gnome-shell/theme/focalgdm3
pfx=/org/gnome/shell/theme

# --- begin functions --- #

f_usage () {
cat <<-EOFU
$(sed -ne '/^#$/,/^$/p' $0)
 
 Customize Ubuntu Focal, Groovy and Hirsute (2[0-1].xx) login screen background

 ${0##*/} --help        - This help
            --set         - Set custom backgroud color or image
            --reset       - Reset to default theme settings

EOFU
}

f_prechecks () {        # Run pre checks
if [[ ! ${dist} =~ ^(focal|groovyy|hirsute)$ ]]; then
    f_usage
    echo " -----------------------------------------"
    echo -e "\e[91m  Sorry, '${dist}' is untested/not supported\e[m"
    echo "  Exiting..."
    echo " -----------------------------------------"
    exit 1
elif [ ! -r /usr/share/gnome-shell/gdm3-theme.gresource ]; then
    echo -e "\n\e[91m gdm3-theme.gresource not found, exiting\n\e[m"
    exit 1
elif [ ! "$(dpkg -l | awk "/${manpkg}:/ && /^ii/")" ]; then
    echo " ----------------------------------------------"
    echo -e "  \e[33mPackage '${manpkg}' is not installed.\e[m"
    echo " ----------------------------------------------"
    read -rp " Install now? [y/n]: " instpkg
    if [[ ! "${instpkg}" == "y" ]]; then
        echo -e " \e[91mSkipping install and exiting.\e[m\n"
        exit 1
    else
        echo; sudo apt update >/dev/null 2>&1; sudo apt install ${manpkg}
        if [ $? -ne 0 ]; then
            echo -e "\e[91m   Something went wrong installing \e[m${manpkg}\e[91m, check dpkg.log\e[m\n"
            exit 1
        fi
    fi
fi
}

f_check_uid () {        # Check sudo
if [ "${UID}" != "0" ]; then
    echo -e "\n\e[93m ${0##*/} must be run with sudo\e[m\n"
    exit 1
fi
}

f_verify_input () {     # Verify input
if ! [ -f "$1" ] && ! [[ $1 =~ ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$ ]]; then
    echo -e "\n\e[91m '$1' is not a valid /absolute/Image/path or a valid 'HEX Color Code'"
    echo -e " Exiting without any changes..\e[m\n"
    exit 1
elif [ -f "$1" ]; then
    color='#042320'
    img="'file://$1'"
else
    color=$1
fi
}

f_extract () {          # Extract all files from theme
while read -r item; do
    if [ ! -d "$(dirname ${dst}/${item#$pfx/})" ]; then mkdir -p $(dirname ${dst}/${item#$pfx/}); fi
    if [[ ${item} =~ gdm3.css ]]; then gresource extract ${src} ${item} > $(dirname ${dst}/${item#$pfx/})/original.css; else
    gresource extract ${src} ${item} > $(dirname ${dst}/${item#$pfx/})/$(basename ${item#$pfx/}); fi
done< <( gresource list $src )
}

f_gen_css () {          # Generate css file
cat <<-EOFC > ${dst}/gdm3.css
'@import url("resource:///org/gnome/shell/theme/original.css");
  #lockDialogGroup {
  background: '${color}' url('${img}');
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center; }
EOFC
}

f_gen_xml () {          # Generate xml file
cat <<-EOFX > ${dst}/focalgdm3.gresource.xml
<?xml version="1.0" encoding="UTF-8"?>
<gresources>
  <gresource prefix="/org/gnome/shell/theme">
  $(list-files)
  </gresource>
</gresources>
EOFX
}

list-files () {         # Feed xml generation with extracted files
while read -r file; do
    echo "     <file>${file/$dst\/}</file>"
done < <( find ${dst} -type f -print | sort )
}

f_compile () {          # Compile new gresource
glib-compile-resources --sourcedir ${dst} --target ${dst%/*}/focalgdm3.gresource ${dst}/focalgdm3.gresource.xml
} 

f_install () {          # Install new gresrouce
update-alternatives --quiet --install /usr/share/gnome-shell/gdm3-theme.gresource gdm3-theme.gresource /usr/local/share/gnome-shell/theme/focalgdm3.gresource 0
update-alternatives --quiet --set gdm3-theme.gresource /usr/local/share/gnome-shell/theme/focalgdm3.gresource

check=$(update-alternatives --query gdm3-theme.gresource | awk '/^Value/ {print $2}')
if [ "${check}" == "${dst}.gresource" ]; then
    echo -e "\e[32m"
    echo "                                      ---------"
    echo "                                      |Success|"
    echo "                                      ---------"
    echo -e "\e[m                      Changes will be effective after a Reboot"
    echo
    rm -r ${dst}
else
    echo Failure
    exit 1
fi
}
 
f_reset () {            # Reset cutomizations to default
rm /usr/local/share/gnome-shell/theme/focalgdm3.gresource
update-alternatives --quiet --set gdm3-theme.gresource "${src}"
pushd /usr/local/share >/dev/null
rmdir --ignore-fail-on-non-empty -p gnome-shell/theme
popd >/dev/null
cat <<- EOFR
$(echo -e "\e[32m")
          ------------------
          |Reset Successful|
          ------------------ $(echo -e "\e[m")
 Changes will be effective after a Reboot

EOFR
exit 0
}

# --- end functions --- #

f_prechecks

case "$1" in 
    --help)
        f_usage                 # Show usage
        exit 1
    ;;
    --set)
        f_check_uid             # Check sudo
        read -e -rp "Enter full path to image (tab complete) or enter HEXColorCode including #: " var
        f_verify_input ${var}   # Verify image path or hexcolor input
        f_extract               # Extract css and svg's from theme Gvariant DB
        f_gen_css               # Generate login background css
        f_gen_xml               # Generate gresource xml
        f_compile               # Compile gresource xml
        f_install               # Install compiled gresource
    ;;
    --reset)
        if ! [ -f /usr/local/share/gnome-shell/theme/focalgdm3.gresource ]; then
            echo " ------------------------------------------------------------------------------ "
            echo " No need, Already Reset. (or unlikely background is not set using this Script.) "
            echo " ------------------------------------------------------------------------------ "
            exit 0
        else
            f_check_uid         # Check sudo
            f_reset             # Reset custom settings to theme defaults
            exit 0
        fi
    ;;
    "")
        echo "${0##/*} --help for details"
        exit 1
    ;;
esac

